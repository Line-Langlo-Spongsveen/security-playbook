name: Build and deploy main
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # ratchet:actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@1f8c6b94b26d0feae1e387ca63ccbdc44d27b561 # ratchet:actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Cache dependencies
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # ratchet:actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # ratchet:docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Docker image tag with short sha
        id: dockertag
        run: echo "::set-output name=docker_img::ghcr.io/${{ github.repository }}:$(git rev-parse --short HEAD)"
      - name: Build and push the Docker image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # ratchet:docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.dockertag.outputs.docker_img }}
          cache-from: type=registry,ref=${{ steps.dockertag.outputs.docker_img }}
          cache-to: type=inline
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # ratchet:actions/checkout@v2
      - name: Generate Docker image tag with short sha
        id: dockertag
        run: echo "::set-output name=docker_img::ghcr.io/${{ github.repository }}:$(git rev-parse --short HEAD)"
      - uses: nais/deploy/actions/deploy@727f0adc1e2ba8ef9286f42230ade61a70d2da05 # ratchet:nais/deploy/actions/deploy@v1
        if: github.ref == 'refs/heads/main'
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/dev-gcp.yaml
          IMAGE: ${{ steps.dockertag.outputs.docker_img }}
  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-dev
    steps:
      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # ratchet:actions/checkout@v2
      - name: Generate Docker image tag with short sha
        id: dockertag
        run: echo "::set-output name=docker_img::ghcr.io/${{ github.repository }}:$(git rev-parse --short HEAD)"
      - uses: nais/deploy/actions/deploy@727f0adc1e2ba8ef9286f42230ade61a70d2da05 # ratchet:nais/deploy/actions/deploy@v1
        if: github.ref == 'refs/heads/main'
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml,.nais/alerts.yaml
          VARS: .nais/prod-gcp.yaml
          IMAGE: ${{ steps.dockertag.outputs.docker_img }}
